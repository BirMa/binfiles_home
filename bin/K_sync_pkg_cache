#! /bin/sh

MOUNT_public='/mnt/H/public'
CACHE_nas="$MOUNT_public/Martin/_/pacman_cache"
CACHE_local='/var/cache/pacman/pkg'
BUF_tmp='/tmp/pacman_cache_buf'


if [[ ${EUID} -ne 0 ]]; then
  echo 'need to be root'
  exit 1
fi

# if online cache is mounted, dismount it
echo ":: check: mounted?";
if [[ $(mount|grep -q "on\ $MOUNT_public";echo $?) -eq 0 ]]; then
  echo ":: info: umount-nas";
  umount $MOUNT_public
  if [[ $? -ne 0 ]]; then
    echo ":: fail: umount-nas"
    exit 1
  fi
fi

echo ":: info: delete .part files in offline nas cache";
find $CACHE_nas -name '*.part' -execdir echo 'remove file: ' '{}' \; -execdir rm -v '{}' \;

echo ":: info: delete .part files in local cache";
find $CACHE_local -name '*.part' -execdir echo 'remove file: ' '{}' \; -execdir rm -v '{}' \;

echo ":: info: create tmp buffer";
mkdir -p $BUF_tmp || (echo ":: fail: create tmp buffer"; exit 1)

if [[ ! -d $CACHE_nas ]] || ( cd $CACHE_nas && [[ "$(echo .* *)" = '. .. *' ]] ); then
  echo ":: info: offline nas cache empty"
else
  echo ":: info: move from offline nas cache to tmp buffer";
  mv -nv $CACHE_nas/* $BUF_tmp || (echo ":: fail: move from offline nas cache to tmp buffer"; exit 1)
fi

echo ":: info: mount online cache";
mount $MOUNT_public || (echo ":: fail: mount online cache"; exit 1)

if [[ ! -d $BUF_tmp ]] || ( cd $BUF_tmp && [[ "$(echo .* *)" = '. .. *' ]] ); then
  echo ":: info: tmp buffer empty"
else
  echo ":: info: move from tmp buffer to online cache";
  mv -nv $BUF_tmp/* $CACHE_nas || (echo ":: fail: move from tmp buffer to online cache"; exit 1)
fi

if [[ ! -d $CACHE_local ]] || ( cd $CACHE_local && [[ "$(echo .* *)" = '. .. *' ]] ); then
  echo ":: info: local cache empty"
else
  echo ":: info: move from local cache to online cache";
  mv -nv $CACHE_local/* $CACHE_nas || (echo ":: fail: move from local cache to online cache"; exit 1)
fi

echo ":: info: remove tmp buffer";
rm -v $BUF_tmp/* || echo ":: fail: clear tmp buffer";
rmdir -v $BUF_tmp || echo ":: fail: remove tmp buffer";

echo ":: info: clear local cache";
rm -v $CACHE_local/* || echo ":: fail: clear local cache";

echo ":: info: fix ownerships in online cache"
chown 1000:100 $CACHE_nas/*

echo ":: sync-success"
